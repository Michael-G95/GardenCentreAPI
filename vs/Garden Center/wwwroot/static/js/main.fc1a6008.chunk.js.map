{"version":3,"sources":["components/NavBar/NavBar.module.css","components/Plants/PlantView/PlantView.module.css","components/Login/Login.module.css","components/Plants/SearchPlant/SearchPlant.module.css","components/errorDisplay/Styles.module.css","components/Home/Home.module.css","components/Home/MenuItem/MenuItem.module.css","components/Plants/AddPlant/EditPlantView/AddPlantView.module.css","components/Plants/PlantsView/PlantViews.module.css","components/Plants/ViewSpecificPlant/SinglePlantView/SinglePlantView.module.css","components/Plants/Plants.module.css","components/Plants/PlantMenu/MenuItem/MenuItem.module.css","components/Plants/PlantMenu/PlantMenu.module.css","components/Plants/EditSpecificPlant/EditPlantView/EditPlantView.module.css","components/Home/MenuItem/MenuItem.js","components/NavBar/NavItem/NavItem.js","components/NavBar/NavBar.js","components/Home/Home.js","components/Plants/PlantMenu/MenuItem/MenuItem.js","components/Plants/PlantMenu/PlantMenu.js","components/Plants/Plants.js","components/Plants/PlantView/PlantView.js","components/Plants/PlantsView/PlantsView.js","webService.js","components/errorDisplay/ErrorItem.js","store/ActionTypes.js","store/Actions.js","components/errorDisplay/ErrorDisplay.js","components/Plants/ViewAllPlants/ViewAllPlants.js","components/Login/LoginDigit/LoginDigit.js","components/Login/LoginDisplayBar.js","components/Login/Login.js","env.js","components/Login/LogOut.js","components/Plants/ViewSpecificPlant/SinglePlantView/SinglePlantView.js","components/Plants/ViewSpecificPlant/ViewSpecificPlant.js","components/Plants/EditSpecificPlant/useFieldEditor.js","components/Plants/EditSpecificPlant/EditPlantView/EditPlantView.js","components/Plants/EditSpecificPlant/EditSpecificPlant.js","components/Plants/SearchPlant/SearchPlant.js","components/Plants/PlantSearchResult/PlantSearchResult.js","components/Plants/AddPlant/EditPlantView/AddPlantView.js","components/Plants/AddPlant/AddPlant.js","App.js","serviceWorker.js","store/Reducers.js","store/store.js","index.js"],"names":["module","exports","MenuItem","name","link","color","to","className","Styles","style","backgroundColor","NavItem","text","connect","state","status","loggedIn","Home","props","styles","createMenuOption","PlantMenu","menuItems","map","option","index","key","withRouter","plant","history","description","price","category","section","stocked","quantity","onClick","push","id","PlantsView","plants","title","length","plantViews","SERVICE_ROOT_URL","getAllPlants","a","axios","get","getPlant","putPlant","put","deletePlant","delete","createPlant","post","getAllOrders","getOrder","putOrder","order","deleteOrder","createOrder","ErrorItem","error","remove","message","pushError","console","log","type","ActionTypes","errorList","dispatch","popError","errorItem","ViewAllPlants","useState","plantData","setPlantData","loaded","setLoaded","useEffect","webService","then","result","data","catch","err","Ex","LoginDigit","digit","onClickHandler","LoginDisplayBar","addDigit","addIdNumber","removeDigit","logIn","LogIn","buttons","num","toString","logOut","ViewSpecificPlant","match","setPlant","params","response","useFieldEditor","initialValue","value","setValue","inputField","onChange","event","target","finishEditing","descriptionField","priceField","categoryField","sectionField","stockedField","quantityField","undefined","setName","PlantSearchResult","term","toUpperCase","results","setResult","filter","includes","finishAdd","nameField","sendResult","App","path","exact","component","EditSpecificPlant","SearchPlant","AddPlant","Plants","Login","LogOut","Boolean","window","location","hostname","idReducer","action","substr","loggedInReducer","errorReducer","slice","concat","reducer","combineReducers","Reducers","store","createStore","getState","subscribe","renderApp","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fc1a6008.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBar\":\"NavBar_navBar__nR0dM\",\"navItem\":\"NavBar_navItem__2VYpj\",\"navText\":\"NavBar_navText__2Z3An\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PlantView_root__3Tqki\",\"plantView\":\"PlantView_plantView__3zxcq\",\"plantButtonRow\":\"PlantView_plantButtonRow__1EXxi\",\"plantItem\":\"PlantView_plantItem__10Inn\",\"plantButton\":\"PlantView_plantButton__2UeV5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid-div\":\"Login_grid-div__1c_4D\",\"login-root\":\"Login_login-root__2Gweb\",\"grid-item\":\"Login_grid-item__2erbj\",\"display\":\"Login_display__185FD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchArea\":\"SearchPlant_searchArea__1k2n9\",\"searchHeader\":\"SearchPlant_searchHeader__1f8xh\",\"searchBar\":\"SearchPlant_searchBar__3pgab\",\"goButton\":\"SearchPlant_goButton__2jvBO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorList\":\"Styles_errorList__3D1ii\",\"errorDismiss\":\"Styles_errorDismiss__4wYXR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"Home_menu__J69dc\",\"appContainer\":\"Home_appContainer__3DXgA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuitem\":\"MenuItem_menuitem__1EE4F\",\"menuTitle\":\"MenuItem_menuTitle__1pJua\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"plantView\":\"AddPlantView_plantView__sJoez\",\"plantButtonRow\":\"AddPlantView_plantButtonRow__2BWRb\",\"plantItem\":\"AddPlantView_plantItem__2MuIj\",\"plantButton\":\"AddPlantView_plantButton__3SQ7j\",\"plantButtonDanger\":\"AddPlantView_plantButtonDanger__2i3s6\",\"plantHeader\":\"AddPlantView_plantHeader__L7gVO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"plantsTitle\":\"PlantViews_plantsTitle__3AhlR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SinglePlantView_root__XEYip\",\"plantView\":\"SinglePlantView_plantView__zKWyy\",\"plantButtonRow\":\"SinglePlantView_plantButtonRow__3hJTM\",\"plantItem\":\"SinglePlantView_plantItem__1f4MI\",\"plantButton\":\"SinglePlantView_plantButton__dF7JI\",\"plantHeader\":\"SinglePlantView_plantHeader__231Zh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"plantHome\":\"Plants_plantHome__2GP7Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuItem\":\"MenuItem_menuItem__2Euh9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"PlantMenu_menu__SMXBf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"plantView\":\"EditPlantView_plantView__1aKOR\",\"plantButtonRow\":\"EditPlantView_plantButtonRow__2j7Wt\",\"plantItem\":\"EditPlantView_plantItem__LlCG5\",\"plantButton\":\"EditPlantView_plantButton__1iap1\",\"plantButtonDanger\":\"EditPlantView_plantButtonDanger__2YXAC\",\"plantHeader\":\"EditPlantView_plantHeader__35OCB\"};","import React from 'react';\r\nimport Styles from './MenuItem.module.css'\r\nimport {Link} from 'react-router-dom'\r\nconst MenuItem = ({ name, link, color=\"white\" }) => {\r\n    return (\r\n        <Link to={link} className={Styles[\"menuitem\"]} style={{ backgroundColor: color }}>\r\n            <p className={Styles[\"menuTitle\"]} >\r\n                {name}\r\n            </p>\r\n        </Link>\r\n    );\r\n}\r\n\r\nexport default MenuItem\r\n\r\n","import React from 'react';\r\nimport Styles from '../NavBar.module.css'\r\nimport {Link} from 'react-router-dom'\r\nconst NavItem = ({ to=\"\",text=\"Link\"}) => {\r\n    return (\r\n        <Link className={Styles[\"navItem\"]} to={to}>\r\n            <p className={Styles[\"navText\"]}>\r\n                {text}\r\n            </p>\r\n        </Link>\r\n        );\r\n}\r\n\r\nexport default NavItem","import React from 'react';\r\nimport NavItem from './NavItem/NavItem'\r\nimport Styles from './NavBar.module.css'\r\nimport {connect} from 'react-redux'\r\nconst NavBar = ({status}) => {\r\n    // Conditionally displaying Log In or Log Out depending on state id\r\n    return (\r\n        <div className={Styles[\"navBar\"]}>\r\n            \r\n            {status?<NavItem to=\"/logout\" text=\"Log Out\" />:<NavItem to=\"/login\" text=\"Log In\" />}\r\n            <NavItem to=\"/plants\" text=\"Plants\" />\r\n            <NavItem to=\"/orders\" text=\"Orders\" />\r\n            <NavItem to=\"/\" text=\"Home\" />\r\n        </div>\r\n        );\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return {\r\n        // If id > 0 then user is logged in \r\n        status:state.loggedIn\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(NavBar)","import React from 'react';\r\nimport styles from './Home.module.css';\r\nimport MenuItem from './MenuItem/MenuItem';\r\nimport NavBar from '../NavBar/NavBar';\r\n\r\nconst Home = props => (\r\n    <>\r\n        <NavBar />\r\n        <div className={styles[\"appContainer\"]}>\r\n\r\n            <div className={styles[\"menu\"]}>\r\n                <MenuItem name=\"Plants\" link=\"/plants\" color=\"Forestgreen\" />\r\n                <MenuItem name=\"Orders\" link=\"/orders\" color=\"darkslategray\" />\r\n\r\n            </div>\r\n        </div>\r\n    </>\r\n);\r\n\r\nexport default (Home);\r\n","import React from 'react'\r\nimport Styles from './MenuItem.module.css'\r\nimport {Link} from 'react-router-dom'\r\nconst MenuItem = ({ text, to }) => {\r\n    return (\r\n        <Link to={to} className={Styles[\"menuItem\"]}>\r\n            <p>\r\n                {text}\r\n            </p>\r\n        </Link>\r\n        );\r\n}\r\n\r\nexport default MenuItem","import React from 'react';\r\nimport MenuItem from './MenuItem/MenuItem'\r\nimport Styles from './PlantMenu.module.css'\r\nconst PlantMenu = () => {\r\n    const menuOptions = [\r\n        createMenuOption(\"View all plants\", \"/plants/all\"),\r\n        createMenuOption(\"Search for a plant\", \"/plants/search\"),\r\n        createMenuOption(\"Add a plant\", \"/plants/new\")\r\n    ];\r\n\r\n    const menuItems = menuOptions.map((option, index) => <MenuItem key={index} text={option.text} to={option.to} />);\r\n    return (\r\n        <div className={Styles[\"menu\"]}>\r\n            {menuItems}\r\n        </div>\r\n        );\r\n}\r\n\r\nconst createMenuOption = (text, to) => {\r\n    return { text, to }\r\n};\r\nexport default PlantMenu","import React from 'react';\r\nimport NavBar from '../NavBar/NavBar';\r\nimport Styles from './Plants.module.css'\r\nimport PlantMenu from './PlantMenu/PlantMenu';\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nconst Plants = ({ loggedIn }) => {\r\n    if (!loggedIn) {\r\n        return <Redirect to=\"/login\" />\r\n    } else {\r\n        return (\r\n            <>\r\n                <NavBar />\r\n                <div className={Styles[\"plantHome\"]}>\r\n\r\n                    <PlantMenu />\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loggedIn: state.loggedIn\r\n    }\r\n}\r\n\r\n    export default connect(mapStateToProps)(Plants);","import React from 'react';\r\nimport Styles from './PlantView.module.css';\r\nimport { withRouter }from 'react-router-dom'\r\n\r\nconst PlantView = ({ plant,history }) => {\r\n    return (\r\n        <div className={Styles[\"root\"]}>\r\n        <div className={Styles[\"plantView\"]}>\r\n            <div>\r\n                <div className={Styles[\"plantItem\"]}><span>Name</span></div>\r\n                <div className={Styles[\"plantItem\"]}><span>{plant.name}</span></div>\r\n            </div>\r\n            <div>\r\n                <div className={Styles[\"plantItem\"]}><span>Description</span></div>\r\n                <div className={Styles[\"plantItem\"]}><span>{plant.description}</span></div>\r\n            </div>\r\n            <div>\r\n                <div className={Styles[\"plantItem\"]}><span>Price</span></div>\r\n                <div className={Styles[\"plantItem\"]}><span>{plant.price}</span></div>\r\n            </div>\r\n            <div>\r\n                <div className={Styles[\"plantItem\"]}><span>Category</span></div>\r\n                <div className={Styles[\"plantItem\"]}><span>{plant.category}</span></div>\r\n            </div>\r\n            <div>\r\n                <div className={Styles[\"plantItem\"]}><span>Section</span></div>\r\n                <div className={Styles[\"plantItem\"]}><span>{plant.section}</span></div>\r\n            </div>\r\n            <div>\r\n                <div className={Styles[\"plantItem\"]}><span>Stocked?</span></div>\r\n                <div className={Styles[\"plantItem\"]}><span>{plant.stocked ? 'Yes' : 'No'}</span></div>\r\n\r\n            </div>\r\n            <div>\r\n                <div className={Styles[\"plantItem\"]}><span>Quantity </span></div>\r\n                <div className={Styles[\"plantItem\"]}><span>{plant.quantity}</span></div>\r\n            </div>\r\n        </div>\r\n        <div className={Styles[\"plantButtonRow\"]}>\r\n            <div className={Styles[\"plantButton\"]} onClick={()=>history.push(`/plants/view/${plant.id}`)}>\r\n                <span>View/Edit</span>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\nexport default withRouter(PlantView);","import React from 'react';\r\nimport PlantView from '../PlantView/PlantView'\r\nimport Styles from './PlantViews.module.css'\r\nconst PlantsView = ({ plants,title }) => {\r\n\r\n    if (plants.length < 1) {\r\n        return <h1 className={Styles[\"plantsTitle\"]}>No Plants to Display!</h1>\r\n    }\r\n\r\n    const plantViews = plants.map((plant) => <PlantView key={plant.id} plant={plant} />);\r\n\r\n    return (\r\n        <div>\r\n            <h1 className={Styles[\"plantsTitle\"]}>\r\n                {title}\r\n            </h1>\r\n            {plantViews}\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default PlantsView","import axios from 'axios'\r\n//const SERVICE_ROOT_URL=\"https://mg-gardencentre.herokuapp.com/api\"\r\nconst SERVICE_ROOT_URL = \"https://localhost:44337/api\"\r\n\r\nexport const getAllPlants = async () => {\r\n    return axios.get(`${SERVICE_ROOT_URL}/plants`);\r\n}\r\n\r\nexport const getPlant = (id) => {\r\n    return axios.get(`${SERVICE_ROOT_URL}/plants/${id}`);\r\n}\r\n\r\nexport const putPlant=(id,plant)=>{\r\n    return axios.put(`${SERVICE_ROOT_URL}/plants/${id}`,plant)\r\n}\r\n\r\nexport const deletePlant=(id)=>{\r\n    return axios.delete(`${SERVICE_ROOT_URL}/plants/${id}`);\r\n}\r\n\r\nexport const createPlant=(plant)=>{\r\n    return axios.post(`${SERVICE_ROOT_URL}/plants`,plant);\r\n}\r\n\r\nexport const getAllOrders = async () => {\r\n    return axios.get(`${SERVICE_ROOT_URL}/orders/`);\r\n}\r\n\r\nexport const getOrder = (id) => {\r\n    return axios.get(`${SERVICE_ROOT_URL}/orders/${id}`);\r\n}\r\n\r\nexport const putOrder=(id,order)=>{\r\n    return axios.put(`${SERVICE_ROOT_URL}/orders/${id}`,order)\r\n}\r\n\r\nexport const deleteOrder=(id)=>{\r\n    return axios.delete(`${SERVICE_ROOT_URL}/orders/${id}`);\r\n}\r\n\r\nexport const createOrder=(order)=>{\r\n    return axios.post(`${SERVICE_ROOT_URL}/orders/`,order);\r\n}\r\n\r\n\r\nexport default {\r\n    getAllPlants,getPlant,putPlant,deletePlant,createPlant,getAllOrders,getOrder,putOrder,deleteOrder,createOrder\r\n}","import React from 'react'\r\nimport Styles from './Styles.module.css'\r\nconst ErrorItem = ({ error,remove }) => {\r\n    return (\r\n        <div onClick={remove}>\r\n            <h3>\r\n                {error.name}\r\n            </h3>\r\n            <p>\r\n                {error.message}              \r\n            </p>\r\n            \r\n        </div>\r\n        );\r\n}\r\n\r\nexport default ErrorItem","export default {\r\n    SetStateId:'SetStateID',\r\n    AddIdNumber:\"AddIdNumber\",\r\n    RemoveIdNumber:\"RemoveIdNumber\",\r\n    LogIn:\"LogIn\",\r\n    LogOut: \"LogOut\",\r\n    PopError: \"PopError\",\r\n    PushError:\"PushError\"\r\n}","import ActionTypes from './ActionTypes'\r\n\r\n\r\nexport const setLoginId = (id)=>{\r\n    // Called to set the ID of the user for any POST requests\r\n    return{\r\n        type:ActionTypes.SetStateId,\r\n        data:id\r\n    }\r\n}\r\n\r\nexport const addIdNumber = (digit)=>{\r\n    // Called to add a digit to id input\r\n    return {\r\n        type:ActionTypes.AddIdNumber,\r\n        data:digit\r\n    }\r\n}\r\n\r\nexport const removeIdNumber = ()=>{\r\n    return {\r\n        type:ActionTypes.RemoveIdNumber\r\n    }\r\n}\r\n\r\nexport const LogIn=(id)=>{\r\n    return {\r\n        type:ActionTypes.LogIn,\r\n        data:{\r\n            id:id\r\n        }\r\n    }\r\n}\r\n\r\nexport const LogOut=()=>{\r\n    return {\r\n        type:ActionTypes.LogOut\r\n    }\r\n}\r\n\r\nexport const popError = () => {\r\n    return {\r\n        type:ActionTypes.PopError\r\n    }\r\n}\r\n\r\nexport const pushError = (name, message) => {\r\n    console.log('ACTION')\r\n    return {\r\n        type: ActionTypes.PushError,\r\n        name: name,\r\n        message:message\r\n    }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport ErrorItem from './ErrorItem';\r\nimport Styles from './Styles.module.css'\r\nimport { popError } from '../../store/Actions'\r\n\r\nconst ErrorDisplay = ({ errorList,popError }) => {\r\n\r\n    if (errorList.length < 1) {\r\n        // No errors to display, hide this component\r\n        return <></>\r\n    }\r\n\r\n    const errorItem = <ErrorItem error={errorList[0]} remove={popError} />\r\n    return (\r\n        <div className={Styles[\"errorList\"]}>\r\n            {errorItem}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        errorList: state.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        popError: ()=>dispatch(popError())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ErrorDisplay);","import React, { useState, useEffect } from 'react';\r\nimport PlantsView from '../PlantsView/PlantsView';\r\nimport webService from '../../../webService'\r\nimport NavBar from '../../NavBar/NavBar';\r\nimport ErrorDisplay from '../../errorDisplay/ErrorDisplay';\r\nconst ViewAllPlants = (props) => {\r\n    let [plantData, setPlantData] = useState(false);\r\n    let [loaded, setLoaded] = useState(false);\r\n\r\n    useEffect(() => {\r\n        console.log('effect');\r\n        try {\r\n            webService.getAllPlants()\r\n                .then((result) => {\r\n                    debugger\r\n                    setPlantData(result.data);\r\n                    setLoaded(true);\r\n                })\r\n                .catch((err) => {\r\n                    debugger\r\n                    console.log(err.message);\r\n                })\r\n\r\n        }\r\n        catch (Ex) {\r\n\r\n        }\r\n\r\n    }, []);\r\n\r\n    if (!loaded) {\r\n        return (\r\n            <>\r\n                <NavBar />\r\n                <ErrorDisplay />\r\n                <p>Loading...</p>\r\n            </>)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <NavBar />\r\n            <ErrorDisplay />\r\n            <PlantsView plants={plantData} title=\"All Plants\" />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ViewAllPlants;","import React from 'react'\r\nconst LoginDigit = ({digit,onClickHandler})=>{\r\n    return(\r\n        <div onClick={onClickHandler}>\r\n            <p>{digit}</p>\r\n        </div>\r\n    )\r\n}\r\nexport default LoginDigit\r\n\r\n","import React from 'react';\r\nimport Styles from './Login.module.css'\r\n\r\nconst LoginDisplayBar = ({id})=>{\r\n    return (\r\n        <div className={Styles['display']}>\r\n            <p>{id}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginDisplayBar","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addIdNumber, removeIdNumber, LogIn, pushError } from '../../store/Actions';\r\nimport Styles from './Login.module.css'\r\nimport LoginDigit from './LoginDigit/LoginDigit';\r\nimport NavBar from '../NavBar/NavBar';\r\nimport LoginDisplayBar from './LoginDisplayBar';\r\nimport {withRouter} from 'react-router-dom'\r\nimport { PASSCODE } from '../../env'\r\nimport ErrorDisplay from '../errorDisplay/ErrorDisplay'\r\n\r\nconst Login = ({ pushError,history,id, addDigit, removeDigit, logIn }) => {\r\n    const nums = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n    const buttons = nums.map(num => {\r\n        return <LoginDigit key={num} digit={num} onClickHandler={() => addDigit(num.toString())} />\r\n    })\r\n\r\n    const logInHandler = () => {\r\n        // Check if id matches PASSCODE from env file. In future to be replace with server auth\r\n        if (id == PASSCODE) {\r\n            logIn(id);\r\n            history.push('/');\r\n        } else {\r\n            pushError('Access Denied', 'Passcode incorrect!');\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <NavBar />\r\n            <ErrorDisplay />\r\n            <div className={Styles['login-root']}>\r\n\r\n                <LoginDisplayBar id={id} />\r\n                <div className={Styles['grid-div']}>\r\n                    {buttons}\r\n                    <LoginDigit digit={'<'} onClickHandler={() => { removeDigit(); }} />\r\n                    <LoginDigit digit={'Go'} onClickHandler={logInHandler} />\r\n                    <LoginDigit digit={'Back'} onClickHandler={()=>history.push('/')} />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        id: state.id\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addDigit: (digit) => dispatch(addIdNumber(digit)),\r\n        removeDigit: () => dispatch(removeIdNumber()),\r\n        logIn: (id) => dispatch(LogIn(id)),\r\n        pushError: (name, message) => dispatch(pushError(name,message))\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Login));","export const PASSCODE = 1995;","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux'\r\nimport {LogOut as logOutAction} from '../../store/Actions'\r\nconst LogOut = ({logOut})=>{\r\n    logOut();\r\n    return (\r\n        <>\r\n        <Redirect to='/'/>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps=(state)=>{return {}}\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        logOut:()=>dispatch(logOutAction())\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(LogOut);","import React from 'react'\r\nimport Styles from './SinglePlantView.module.css'\r\nimport { withRouter } from 'react-router-dom'\r\nconst SinglePlantView = ({ plant, history }) => {\r\n    return (\r\n        <>\r\n        <h1 className={Styles[\"plantHeader\"]}>{plant.name}</h1>\r\n        <div className={Styles[\"root\"]}>\r\n        <div className={Styles[\"plantView\"]}>\r\n            <div>\r\n                <div className={Styles[\"plantItem\"]}><span>Description</span></div>\r\n                <div className={Styles[\"plantItem\"]}><span>{plant.description}</span></div>\r\n            </div>\r\n            <div>\r\n                <div className={Styles[\"plantItem\"]}><span>Price</span></div>\r\n                <div className={Styles[\"plantItem\"]}><span>{plant.price}</span></div>\r\n            </div>\r\n            <div>\r\n                <div className={Styles[\"plantItem\"]}><span>Category</span></div>\r\n                <div className={Styles[\"plantItem\"]}><span>{plant.category}</span></div>\r\n            </div>\r\n            <div>\r\n                <div className={Styles[\"plantItem\"]}><span>Section</span></div>\r\n                <div className={Styles[\"plantItem\"]}><span>{plant.section}</span></div>\r\n            </div>\r\n            <div>\r\n                <div className={Styles[\"plantItem\"]}><span>Stocked?</span></div>\r\n                <div className={Styles[\"plantItem\"]}><span>{plant.stocked ? 'Yes' : 'No'}</span></div>\r\n\r\n            </div>\r\n            <div>\r\n                <div className={Styles[\"plantItem\"]}><span>Quantity </span></div>\r\n                <div className={Styles[\"plantItem\"]}><span>{plant.quantity}</span></div>\r\n            </div>\r\n        </div>\r\n        <div className={Styles[\"plantButtonRow\"]}>\r\n            <div className={Styles[\"plantButton\"]} onClick={()=>history.push(`/plants/edit/${plant.id}`)}>\r\n                <span>Edit</span>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(SinglePlantView)","import React, { useEffect, useState } from 'react'\r\nimport webService from '../../../webService'\r\nimport NavBar from '../../NavBar/NavBar';\r\nimport ErrorDisplay from '../../errorDisplay/ErrorDisplay';\r\nimport PlantView from '../PlantView/PlantView';\r\nimport SinglePlantView from './SinglePlantView/SinglePlantView';\r\n\r\nconst ViewSpecificPlant = ({ match }) => {\r\n    let [plant, setPlant] = useState({});\r\n    useEffect(() => {\r\n        webService.getPlant(match.params.id)\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                setPlant(response.data);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error.message);\r\n            })\r\n\r\n    }, [match.params.id]);\r\n\r\n    if (!plant) {\r\n        return (\r\n            <>\r\n                <NavBar />\r\n                <ErrorDisplay />\r\n                <h1>Loading...</h1>\r\n            </>\r\n        )\r\n    }\r\n    return (\r\n        <>\r\n            <NavBar />\r\n            <ErrorDisplay />\r\n            <SinglePlantView plant={plant} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ViewSpecificPlant","import React, { useState } from 'react';\r\n;\r\nconst useFieldEditor = (className,type=\"text\",initialValue=\"\") => {\r\n    let [value,setValue] = useState(initialValue);\r\n\r\n    const inputField = <input type={type} className={className} onChange={(event)=>setValue(event.target.value)} value={value} />\r\n    return {\r\n        value,inputField\r\n    }\r\n\r\n}\r\n\r\nexport default useFieldEditor;","import React from 'react'\r\nimport Styles from './EditPlantView.module.css'\r\nimport { withRouter } from 'react-router-dom'\r\nimport useFieldEditor from '../useFieldEditor'\r\nconst EditPlantView = ({ plant,finishEditing,deletePlant }) => {\r\n    const descriptionField = useFieldEditor(\"\",\"text\",plant.description);\r\n    const priceField = useFieldEditor(\"\",\"number\",plant.price);\r\n    const categoryField = useFieldEditor(\"\",\"text\",plant.category);\r\n    const sectionField = useFieldEditor(\"\",\"text\",plant.section);\r\n    const stockedField = useFieldEditor(\"\",\"checkbox\",plant.stocked?\"true\":\"false\");//boolean to string\r\n    const quantityField = useFieldEditor(\"\",\"number\",plant.quantity);\r\n    \r\n    const sendResult = ()=>{\r\n        plant = {\r\n            name:plant.name,\r\n            description:descriptionField.value,\r\n            price:priceField.value,\r\n            category:categoryField.value,\r\n            section:sectionField.value,\r\n            stocked:stockedField.value===\"true\"?true:false, // converting from str to boolean\r\n            quantity:quantityField.value\r\n        }\r\n        finishEditing(plant);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1 className={Styles[\"plantHeader\"]}>{plant.name}</h1>\r\n            <div className={Styles[\"plantView\"]}>\r\n                <div>\r\n                    <div className={Styles[\"plantItem\"]}><span>Description</span></div>\r\n                    <div className={Styles[\"plantItem\"]}>{descriptionField.inputField} </div>\r\n                </div>\r\n                <div>\r\n                    <div className={Styles[\"plantItem\"]}><span>Price</span></div>\r\n                    <div className={Styles[\"plantItem\"]}><span>{priceField.inputField}</span></div>\r\n                </div>\r\n                <div>\r\n                    <div className={Styles[\"plantItem\"]}><span>Category</span></div>\r\n                    <div className={Styles[\"plantItem\"]}><span>{categoryField.inputField}</span></div>\r\n                </div>\r\n                <div>\r\n                    <div className={Styles[\"plantItem\"]}><span>Section</span></div>\r\n                    <div className={Styles[\"plantItem\"]}><span>{sectionField.inputField}</span></div>\r\n                </div>\r\n                <div>\r\n                    <div className={Styles[\"plantItem\"]}><span>Stocked?</span></div>\r\n                    <div className={Styles[\"plantItem\"]}><span>{stockedField.inputField}</span></div>\r\n\r\n                </div>\r\n                <div>\r\n                    <div className={Styles[\"plantItem\"]}><span>Quantity </span></div>\r\n                    <div className={Styles[\"plantItem\"]}><span>{quantityField.inputField}</span></div>\r\n                </div>\r\n                \r\n            </div>\r\n            <div className={Styles[\"plantButtonRow\"]}>\r\n                <div className={Styles[\"plantButton\"]} onClick={() => sendResult()}>\r\n                        <span>Save</span>\r\n                </div>\r\n                <div className={Styles[\"plantButtonDanger\"]} onClick={() => deletePlant()}>\r\n                        <span>Delete</span>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(EditPlantView)","import React, { useState, useEffect } from 'react'\r\nimport webService from '../../../webService'\r\nimport {connect} from 'react-redux'\r\nimport ErrorDisplay from '../../errorDisplay/ErrorDisplay'\r\nimport {pushError} from '../../../store/Actions'\r\nimport NavBar from '../../NavBar/NavBar'\r\nimport EditPlantView from './EditPlantView/EditPlantView'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nconst EditSpecificPlant = ({ history,match,pushError }) => {\r\n    let [plant,setPlant] = useState({});\r\n    const id = match.params.id;\r\n\r\n    useEffect(()=>{\r\n        webService.getPlant(id)\r\n        .then((response)=>{\r\n            setPlant(response.data);\r\n        })\r\n        .catch((error)=>{\r\n            pushError(\"Error getting plant data from the API\",error.message);\r\n        })\r\n    },[id]);\r\n\r\n    const finishEditing = (plant)=>{\r\n        // Set the plant id as this isnt passed to child components\r\n        plant.id = id;\r\n        \r\n        webService.putPlant(id,plant)\r\n        .then((response)=>{\r\n            history.push(`/plants/view/${plant.id}`);\r\n        })\r\n        .catch((error)=>{\r\n            pushError(\"Unable to save changes\",error.message)\r\n        })\r\n    }\r\n\r\n    const deletePlant=()=>{\r\n        webService.deletePlant(id)\r\n        .then(()=>{\r\n            history.push('/plants/all');\r\n        })\r\n        .catch((error)=>{\r\n            pushError(\"Unable to delete\",error.message);\r\n        })\r\n    }\r\n\r\n    if(plant.id===undefined){\r\n        // Not initialised\r\n        return (\r\n            <>\r\n                <NavBar />\r\n                <ErrorDisplay />\r\n            </>\r\n        )\r\n    }\r\n    return (\r\n        <>\r\n            <NavBar />\r\n            <ErrorDisplay/>\r\n            <EditPlantView plant={plant} finishEditing={finishEditing} deletePlant={deletePlant}/>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToprops = (dispatch)=>{\r\n    return {\r\n        pushError:(name,message)=>dispatch(pushError(name,message))\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToprops)(EditSpecificPlant));","import React,{useState} from 'react'\r\nimport Styles from './SearchPlant.module.css'\r\nimport NavBar from '../../NavBar/NavBar';\r\nimport ErrorDisplay from '../../errorDisplay/ErrorDisplay';\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nconst SearchPlant=({history})=>{\r\n    let [name,setName]=useState(\"\");\r\n    return (\r\n        <>\r\n        <NavBar/>\r\n        <ErrorDisplay/>\r\n        <div className={Styles[\"searchArea\"]}>\r\n            <div className={Styles[\"searchHeader\"]}>\r\n                <h1>\r\n                    Plant Search\r\n                </h1>\r\n            </div>\r\n            <div className={Styles[\"searchBar\"]}>\r\n            <div>\r\n                <span>Search For Name:</span>\r\n                <input type=\"text\" value={name} onChange={(event)=>setName(event.target.value)}/>\r\n            </div>\r\n            <div className={Styles[\"goButton\"]} onClick={()=>history.push(`/plants/search/${name}`)}>\r\n                <span>Go</span>\r\n            </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(SearchPlant)","import React,{useState,useEffect} from 'react'\r\nimport webService from '../../../webService';\r\nimport NavBar from '../../NavBar/NavBar';\r\nimport ErrorDisplay from '../../errorDisplay/ErrorDisplay';\r\nimport PlantsView from '../PlantsView/PlantsView';\r\n\r\nconst PlantSearchResult = ({match})=>{\r\n    const term = match.params.term.toUpperCase();\r\n    const [results,setResult] =useState({});\r\n\r\n    useEffect(\r\n        ()=>{\r\n            // Get all plants, set result = to the plants array returned, filtered so plant is present if either name contains term or description does\r\n            webService.getAllPlants()\r\n                .then((response)=>{\r\n                    setResult(\r\n                        response.data.filter((plant)=>{\r\n                            return (plant.name.toString().toUpperCase().includes(term) || plant.description.toString().toUpperCase().includes(term));    \r\n                        })\r\n                    )\r\n                })\r\n        },\r\n        [term]\r\n    )\r\n    console.log(results);\r\n    if(results[0]===undefined){\r\n        return (\r\n            <>\r\n            <NavBar />\r\n            <ErrorDisplay/>\r\n            </>\r\n        )\r\n    }\r\n    return (\r\n        <>\r\n            <NavBar />\r\n            <ErrorDisplay/>\r\n            <PlantsView plants={results} title={\"Search Results\"}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlantSearchResult","import React from 'react'\r\nimport Styles from './AddPlantView.module.css'\r\nimport { withRouter } from 'react-router-dom'\r\nimport useFieldEditor from '../../EditSpecificPlant/useFieldEditor';\r\nconst AddPlantView = ({finishAdd }) => {\r\n    const nameField = useFieldEditor(\"\",\"text\");\r\n    const descriptionField = useFieldEditor(\"\",\"text\");\r\n    const priceField = useFieldEditor(\"\",\"number\");\r\n    const categoryField = useFieldEditor(\"\",\"text\");\r\n    const sectionField = useFieldEditor(\"\",\"text\");\r\n    const stockedField = useFieldEditor(\"\",\"checkbox\",\"false\");\r\n    const quantityField = useFieldEditor(\"\",\"number\");\r\n    console.log(\"SF.VAL=\",stockedField.value)\r\n    const sendResult = ()=>{\r\n        console.log(\"FINAL SF.VAL=\",stockedField.value)\r\n        const plant = {\r\n            name:nameField.value,\r\n            description:descriptionField.value,\r\n            price:priceField.value,\r\n            category:categoryField.value,\r\n            section:sectionField.value,\r\n            stocked:stockedField.value===\"true\"?true:false,\r\n            quantity:quantityField.value\r\n        }\r\n        finishAdd(plant);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1 className={Styles[\"plantHeader\"]}>New Plant</h1>\r\n            <div className={Styles[\"plantView\"]}>\r\n                <div>\r\n                    <div className={Styles[\"plantItem\"]}><span>Name</span></div>\r\n                    <div className={Styles[\"plantItem\"]}>{nameField.inputField} </div>\r\n                </div>\r\n                <div>\r\n                    <div className={Styles[\"plantItem\"]}><span>Description</span></div>\r\n                    <div className={Styles[\"plantItem\"]}>{descriptionField.inputField} </div>\r\n                </div>\r\n                <div>\r\n                    <div className={Styles[\"plantItem\"]}><span>Price</span></div>\r\n                    <div className={Styles[\"plantItem\"]}><span>{priceField.inputField}</span></div>\r\n                </div>\r\n                <div>\r\n                    <div className={Styles[\"plantItem\"]}><span>Category</span></div>\r\n                    <div className={Styles[\"plantItem\"]}><span>{categoryField.inputField}</span></div>\r\n                </div>\r\n                <div>\r\n                    <div className={Styles[\"plantItem\"]}><span>Section</span></div>\r\n                    <div className={Styles[\"plantItem\"]}><span>{sectionField.inputField}</span></div>\r\n                </div>\r\n                <div>\r\n                    <div className={Styles[\"plantItem\"]}><span>Stocked?</span></div>\r\n                    <div className={Styles[\"plantItem\"]}><span>{stockedField.inputField}</span></div>\r\n\r\n                </div>\r\n                <div>\r\n                    <div className={Styles[\"plantItem\"]}><span>Quantity </span></div>\r\n                    <div className={Styles[\"plantItem\"]}><span>{quantityField.inputField}</span></div>\r\n                </div>\r\n                \r\n            </div>\r\n            <div className={Styles[\"plantButtonRow\"]}>\r\n                <div className={Styles[\"plantButton\"]} onClick={() => sendResult()}>\r\n                        <span>Save</span>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(AddPlantView)","import React from 'react'\r\nimport NavBar from '../../NavBar/NavBar';\r\nimport ErrorDisplay from '../../errorDisplay/ErrorDisplay';\r\nimport AddPlantView from './EditPlantView/AddPlantView';\r\nimport webService from '../../../webService'\r\nimport {connect} from 'react-redux'\r\nimport {pushError} from '../../../store/Actions'\r\n\r\n\r\nconst AddPlant = ({pushError})=>{\r\n    const finishAdd=(plant)=>{\r\n        webService.createPlant(plant)\r\n        .then((response)=>{\r\n            console.log(response)\r\n        })\r\n        .catch((error)=>{\r\n            pushError('Error adding the new plant',error.message);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <NavBar/>\r\n        <ErrorDisplay/>\r\n        <AddPlantView finishAdd={finishAdd}/>\r\n        </>        \r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state)=>{return {}}\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        pushError:(name,message)=>dispatch(pushError(name,message))\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(AddPlant);\r\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Route,Switch } from 'react-router-dom'\nimport Home from './components/Home/Home';\nimport Plants from './components/Plants/Plants';\nimport ViewAllPlants from './components/Plants/ViewAllPlants/ViewAllPlants';\nimport Login from './components/Login/Login';\nimport LogOut from './components/Login/LogOut'\nimport ViewSpecificPlant from './components/Plants/ViewSpecificPlant/ViewSpecificPlant';\nimport EditSpecificPlant from './components/Plants/EditSpecificPlant/EditSpecificPlant';\nimport SearchPlant from './components/Plants/SearchPlant/SearchPlant';\nimport PlantSearchResult from './components/Plants/PlantSearchResult/PlantSearchResult';\nimport AddPlant from './components/Plants/AddPlant/AddPlant';\n\n\nfunction App() {\n  return (\n      <div>\n          <BrowserRouter>\n            <Switch>\n                <Route path='/' exact component={Home} />\n                  <Route path='/plants/all' exact component={ViewAllPlants} />\n                  <Route path='/plants/view/:id' exact component={ViewSpecificPlant} />\n                  <Route path=\"/plants/edit/:id\" exact component={EditSpecificPlant}/>\n                  <Route path='/plants/search' exact component={SearchPlant}/>\n                  <Route path=\"/plants/search/:term\" exact component={PlantSearchResult}/>\n                  <Route path=\"/plants/new\" exact component={AddPlant}/>\n                <Route path='/plants' exact component={Plants} />\n                <Route path='/login' exact component={Login} />\n                <Route path='/logout' exact component={LogOut} />\n            </Switch>\n        </BrowserRouter>\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import ActionTypes from './ActionTypes'\r\nconst idReducer = (state=\"\",action)=>{\r\n    // Reducer for id of state\r\n    switch(action.type){\r\n        case ActionTypes.SetStateId:{\r\n            return action.data;\r\n        }\r\n        case ActionTypes.AddIdNumber:{\r\n            return state + action.data;\r\n        }\r\n        case ActionTypes.RemoveIdNumber:{\r\n            if(state.length >0){\r\n                return state.substr(0,state.length -1);\r\n            }else{\r\n                return '';\r\n            }\r\n            \r\n        }\r\n        case ActionTypes.LogOut:{\r\n            return '';\r\n        }\r\n        default:{\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nconst loggedInReducer=(state=false,action)=>{\r\n    switch(action.type){\r\n        case ActionTypes.LogIn:{\r\n            return true\r\n        }\r\n        case ActionTypes.LogOut:{\r\n            return false;\r\n        }\r\n\r\n        default:{\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nconst errorReducer = (state = [], action) => {\r\n    console.log('REDUCER',action.type);\r\n    switch (action.type) {\r\n        case ActionTypes.PopError: {\r\n            if (state.length > 0) {\r\n                return state.slice(0, state.length - 1);\r\n            } else {\r\n                return state;\r\n            }\r\n        }\r\n        case ActionTypes.PushError: {\r\n            return state.concat({\r\n                name:action.name,\r\n                message:action.message\r\n            });\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport default {\r\n    idReducer,loggedInReducer,errorReducer\r\n}","import {createStore,combineReducers} from 'redux';\r\nimport Reducers from './Reducers'\r\n\r\n// Add reducers\r\nconst reducer = combineReducers({\r\n    id:Reducers.idReducer,\r\n    loggedIn: Reducers.loggedInReducer,\r\n    error:Reducers.errorReducer\r\n})\r\n\r\n// Create store, log initial state\r\nconst store = createStore(reducer);\r\nconsole.log(store.getState());\r\n\r\n// subscribe a lambda printing state to each change\r\nstore.subscribe(() => console.log(store.getState()))\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store/store'\nimport { Provider } from 'react-redux'\n\n\nconst renderApp = ()=> ReactDOM.render((\n    <Provider store={store}>\n        <App />\n    </Provider>\n)\n, document.getElementById('root'));\n\nrenderApp();\nstore.subscribe(renderApp);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}